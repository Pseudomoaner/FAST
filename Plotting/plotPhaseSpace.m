function plotExport = plotPhaseSpace(plotSubs,plotSettings,pGs,root,axHand)
%PLOTPHASESPACE plots tracks, using arbitrary track-associated variables as
%the axes in place of spatial coordinates. 
%
%   INPUTS:
%       -plotSubs: The sub-population(s) of track data that you want to 
%       plot. A 4x1 cell array, containing the specified data for all 
%       tracks (cell 1) and each individual sub-population (cells 2-4).
%       -plotSettings: Settings for plotting, generated by the user within
%       the plotting GUI
%       -pGs: Structure specifying the graphical settings you want to use
%       within this plot.
%       -axHand: A handle to the axis that you want to plot into.
%
%   OUTPUTS:
%       -exportData: Data export - precise form depends on options selected
%       within plotSettings. In general, consists of 4 cells, each
%       containing a structure with data processed based on currently
%       selected options.
%
%   Author: Oliver J. Meacock (c) 2019

plotExport = cell(4,1);

%Create custom colourmaps by interpolating between dark and light shades
%of the chosen line colours
cMaps = cell(4,1);
for i = 1:4
    baseC = pGs.plotColours{i};
    minC = baseC/2;
    maxC = [1,1,1] - (1-baseC)./2;
    cMaps{i} = [minC;baseC;maxC];
end

hold(axHand,'on')
axHand.LineWidth = 2;
axHand.Box = 'on';

legCount = 1;
legNames = {};

for i = 1:size(plotSubs,1)
    xData = {};
    yData = {};
    
    for j = 1:size(plotSubs{i},2) %For each track in this subpopulation
        if ~isempty(plotSubs{i}(j).(plotSettings.data1)) && ~isempty(plotSubs{i}(j).(plotSettings.data2)) %Small risk of this for certain fields
            xData = [xData;plotSubs{i}(j).(plotSettings.data1)];
            yData = [yData;plotSubs{i}(j).(plotSettings.data2)];
        end
    end
    
    if ~isempty(xData)
        for j = 1:size(xData,1) %Loop through tracks
            rMap = interp1(linspace(0,size(xData{j},1)-1,3),cMaps{i}(:,1),0:(size(xData{j},1)-1));
            gMap = interp1(linspace(0,size(xData{j},1)-1,3),cMaps{i}(:,2),0:(size(xData{j},1)-1));
            bMap = interp1(linspace(0,size(xData{j},1)-1,3),cMaps{i}(:,3),0:(size(xData{j},1)-1));
            
            for k = 1:min(size(xData{j},1)-1,size(yData{j},1)-1) %Loop through each datapoint in each track
                currCol = [rMap(k),gMap(k),bMap(k)];
                plot(axHand,[xData{j}(k),xData{j}(k+1)],[yData{j}(k),yData{j}(k+1)],'Color',currCol);
            end
        end
        legPos = round(size(xData{1},1)/2);
        legH(legCount) = plot(axHand,[xData{1}(legPos),xData{1}(legPos+1)],[yData{1}(legPos),yData{1}(legPos+1)],'Color',cMaps{i}(2,:));
        
        legNames = [legNames;pGs.popTags{i}];
        legCount = legCount + 1;
    end
    
    plotExport{i}.xData = xData;
    plotExport{i}.yData = yData;
end

if plotSettings.legendSwitch == 1
    legend(legH,legNames)
end
xlabel(axHand,switchVarName(root,plotSettings.data1,'ptName','hsName'),'FontSize',15)
ylabel(axHand,switchVarName(root,plotSettings.data2,'ptName','hsName'),'FontSize',15)
hold(axHand,'off')
