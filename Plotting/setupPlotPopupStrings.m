function [plotTypePopups,dataPopups] = setupPlotPopupStrings(tracks,plotSettings,root)
%SETUPPLOTPOPUPSTRINGS determines which data fields are available in the
%given track dataset, and sets the dropdown menu list accordingly. Plots
%that cannot be made (due to absence of appropriate fields within tracking
%data) are not made available.
%
%   INPUTS:
%       -tracks: A procTracks-type structure, containing track data for
%       each object in the dataset.
%       -plotSettings: A settings structure, chosen by the user using the
%       plotting GUI
%       -root: The path to the root directory
%
%   OUTPUTS:
%       -plotTypePopups: The cell array of strings that will be made
%       available in the 'Plot type' dropdown menu
%       -dataPopups: The cell array of strings that will be made available
%       in the 'Data 1 selection' and 'Data 2 selection' dropdown menus
%
%   Author: Oliver J. Meacock, (c) 2019

trackNames = fieldnames(tracks);

%Plot type settings
plotTypePopups = {'Choose plot type';'Histograms'};
if isfield(tracks,'x') && isfield(tracks,'y') && ~plotSettings.pseudoTracks
    plotTypePopups = [plotTypePopups;'RMSD'];
end
if ~plotSettings.pseudoTracks
    plotTypePopups = [plotTypePopups;'Timecourse'];
end
if size(trackNames,1) >= 2
    plotTypePopups = [plotTypePopups;'Joint distribution';'2D histogram'];
end
if isfield(tracks,'event') && ~plotSettings.pseudoTracks
    okFlag = false;
    for i = 1:size(tracks,2)
        if max(tracks(i).event) > 0
            okFlag = true;
            break
        end
    end
    if okFlag
        plotTypePopups = [plotTypePopups;'Event centred average'];
    end
end
if isfield(tracks,'M') && isfield(tracks,'D1') && isfield(tracks,'D2')
    plotTypePopups = [plotTypePopups;'Division centred average'];
end
if exist([root,filesep,'Segmentations'],'dir')
    plotTypePopups = [plotTypePopups;'Cartouche';'Kymograph'];
end

%Data selection popup strings
if plotSettings.pseudoTracks %If these are fake tracks (generated by analysing a single frame)
    minLen = 1;
    minLenInd = 1;
else
    minLen = 5;
    minLenInd = [];
    for i = 1:size(tracks,2)
        if minLen < size(tracks(i).x,1)-1
            minLenInd = i;
            break
        end
    end
end

dataPopups = {};
if isempty(minLenInd)
    warndlg('No track long enough for data plotting! No options will be available in the ''Data selection'' field.')
else
    for i = 1:size(trackNames,1)
        if size(tracks(minLenInd).(trackNames{i}),1) >= minLen
            dataPopups = [dataPopups;trackNames{i}];
        end
    end
end